1. Define Linear Programming
    Example:
        Maximize:
            3x1 + x2 + 2x3

            subject to:
                x(1)  + (x2)  +  3x(3) <= 30
                2x(1) + 2x(2) +  5x(3) <= 24
                4x(1) + x(2)  +  2x(3) <= 36 

                x(1), x2, x3 >= 0

        We are looking for the 3 values that maximize the function, but follow the constraints given


        Linear Objective Function:
            3x(1) + x(2) + 2x(3)

        Linear Constraints:
            x(1)  + (x2)  +  3x(3) <= 30
            2x(1) + 2x(2) +  5x(3) <= 24
            4x(1) + x(2)  +  2x(3) <= 36 
        
2. A basic example of linear programming 
    Example 
        Maximize: x1 + x2 

        Constraints:
            4x(1) - x(2) <= 8
            2x(1) + x(2) <= 10 
            5x(1) - 2x(2) >= -2
            x1, x2, >= 0

    ## INSERT PHOTO @ 12:18 ** 

    Notes:
        - Colored areas are ares elimanted by the corresponding colored constraint 
        - After graphing every function on a x2 vs x1 plane we find the feasible solution.
        - The feasible region is a convex n-dimensional "polygon" called a SIMPLEX.
        - When we give a constraint, we are essentially cutting the feasible region in two parts and can only pick one side
        - There exists an optimal solution that is a vertex of the SIMPLEX 
        - Thus, we can see in the photo, that the optimal solution is indeed a vertex of the feasible region given the constraints

3 Standard-Form LP and Slack-Form LP

    Standard Form LP

        Example:
            maximize c(1)x(1) + c(2)x(2) + ... + c(n)x(n)

        Subjected to:
            a(1,1)x(1) + a(1,2)x(2) + ... + a(1,n)x(n) <= b(1)
            a(2,1)x(1) + a(2,2)x(2) + ... + a(2,n)x(n) <= b(2)
            ...
            ...
            ...
            a(m,1)x(1) + a(m,2)x(2) + .... + a(m,n)x(n) <= b(m)
            x(1), x(2), ..., x(n) >= 0

    Standard-Form LP Properties:
        - Maximization problem 
        - Less than or equal to 
        - All variables are greater than or equal to 0 

    Can we turn any LP problem into a Standard-Form problem?
        Yes
    
        Example:
            minimize -2x(1) + 3x(2) 
                Constraints:
                    x(1) + x(2) = 7
                    x(1) - 2x(2) <= 4
                    x1 >= 0

                Problems:
                    - We have a minimization problem 
                    - Equal to operator 
                    - Only one variable is requireed to be >= 0

                1.  To change a minimization problem to a maximize problem:
                    Take the negation of the entire function 

                    -2x(1) + 3x(2) ===> 2x(1) - 3x(2) 

                2. To fix any variable not having the constraint to be >= 0

                    In this example, we need to add a constraing to x(2)

                    To add a constarint to x(2) we can do a simple mathematical trick where x(2) is the difference between two non-negative numbers x(2)' and x(2)''
                    
                        Replace x(2) with:
                            x(2) => x(2)' - x(2)'', where x(2)' >= 0 and x(2)'' >= 0

                            Example:
                                If x(2) was 5:
                                    5 = 6 - 1

                                If x(2) was 0:
                                    0 = 1 - 1 

                                If x(2) was -5:
                                    -5 = 0 - 5
                        
                        The solution space doesn't change when doing this, thus is a valid replacement

                        Thus:

                            x1 + (x(2)' - x(2)'') = 7
                            x1 - 2(x(2)' - x(2)'') <= 4
                            x(2)', x(2)'', x(1) >= 0
                                    |
                                    | Removing the brackets
                                    v 
                            x1 + x(2)' - x(2)'' = 7
                            x1 - 2x(2)' - 2x(2)'' <= 4
                            x(2)', x(2)'', x(1) >= 0