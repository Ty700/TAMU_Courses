Block Ciphers and Stream Ciphers 
    - Block Ciphers 
        - partition plaintext into blocks and encrypt each block independently (with the same key) to produce ciphertext blocks.

    - Stream Ciphers    
        - A stream cipher generates a keystream and encrypts by comining the keystream with the plaintext, usually with the bitwise XOR operation.

    - We will foxus mostly on Block Ciphers

Modern Block Cipher 
    DES - Data Encryptin Standard 
        - Encrypts by series of substitution and transpositions
        - Based on Feistel Structure 
        - Worldwide standard for more than 20 years 
        - Designed by IBM (Lucifer) with later help from NSA 
        - No longer considered secure for highly sensitive applications 
        - Replacement stardard AES (Advanced Encryption standard) recently completed
            - Due to mainly the key size of DES not being large enough now 
                - Key size is only 56 bits long, minimum now is 128 bits 
                - There are ways DES can be strengthed 
    
DES - Overview (Block Operation)
    *INSERT IMAGE OF DES OVERVIEW HERE*

    1. Initial Permuatation to the plaintext 
        Example: 
            8th bit becomes 1st bit 
                - 1st then becomes 8th
            9th bit becomes 21st bit 
                - 9th then becomes 21st 
            42nd bit becomes 3rd bit 
                - 3rd then becomes 42nd 
            
    2. A permuated choice over the 56 bit key 
    3. Key is then shifted a random amount 
    4. Permutated plaintext is encoded by the shifted key resulting in a newly altered plaintext
        - End of a round 
    5. With the original 56-bit key, shift it a random amount again
    6. Encode the newly altered plaintext
    7. Repeat for a total of 16 rounds of permutations 
    8. 32-bit swap 
    9. Inverse Initail Permuatation
        - From previous example:
            - 1st bit becomes 8th 
                - 8th then becomes 1st 
            - 21st bit becomes 9th
                - 9th then becomes 21st 
            - 3rd bit becomes 42nd 
                - 42nd then becomes 3rd bit 
    10. Now we have a 64-bit ciphertext

    For each permutation, the cipher is doing a mix of transpositions and substitutions

DES - Each Round 
    * INSERT IMAGE OF DES - EACH ROUND @ 8:00 * 

    Mathmatical computation that is repeated every round:

        Li = R(i-1)
        Ri = L(i-1) XORed with F(Ki, R(l-1))

        Note:
            Li = Left block of the ith round 
            R(i-1) = Right block of the ith - 1 round
            Ri = Right block of the ith round 
            F = A function that is a series of substitutions and transpositions
                - See image below 
            K = Key for the ith round 

DES - Function F 
    *INSERT PICTURE OF FUNCTION F* 

DES Decryption 
    - Using the same encryption algorithm but with the reversed key schedule
        - Reverse the key schedule
            - Key16 becomes K1 

DES Example 
    Encryption
        Plaintext: 123456ABCD132536
        Key: AABB09182736CCDD

        After initial permuation: 14A7D67818CA18AD
        After splitting:
            L0 = 14A7D678 
            R0 = 18CA18AD 
        
        Round 1
            Left: 18CA18AD 
            Right: 5A78E394
            Key: 194CD072DE8C
        
        Round 2
            Left: 5A78E394
                - Notice how the R(i-1) = Li  
            Right: 4A1210F6
            Key: 4568581AABCCE
        
        Round 3
            Left:  4A1210F6
            Right: B8089591
            Key: 06EDA4ACF5B5
        
        Continues for 16 rounds ending with the ciphertext: C0B7A8D05F3A829C 

    Decryption

    Ciphertext: C0B7A8D05F3A829C

    After inital permutation: 19BA9212CF26B472

    After splitting:
        L0 = 19BA9212
        R0 = CF26B472
    
    Round 1
        Left:  CF26B472 
        Right: BD2DD2AB
        Key: 181C5D75C66D 
            Note: R1 key of decryption should be equal to R16 of encryption
    
    Skipping to Round 15:
        Left: 5A78E394 
        Right: 18CA18AD 
        Key: 4568581AABCCE
            Note: Same as round 2 key 
    
    Round 16:
        Left: 14A7D678 
        Right: 18CA18AD
            Note: Hmmm, R15 = R16? maybe a mistake on the lecture picture 
        Key: 194CD072DE8C
            Note: Same as round 1 key 
    
    After the 16 rounds, we will get the original plaintext: 123456ABCD132536

DES Security: Avalanche Effect
    Plaintext:  0000000000000000
    Ciphertext: 4789FD478E82A5F1
    Key:        22234512987ABB23

    Plaintext:  0000000000000001
    Ciphertext: 0A4ED5C15A63FEA3

    - The only difference between the plaintexts is a single bit. 
    - However, the ciphertext blocks differ in 29 bits.
    - Thus changing the plaintext by 1.5% results in a near 45% change in the ciphertext
        - We can say DES results in strong security as even a single bit is off will result in a roughly a 50% change in the cipher/plain text 
         
    Since there are 16 rounds, each round will collectively differ more and more.
        - Thus the "Avalanche effect"

     
    








